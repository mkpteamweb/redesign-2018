<?php

/**
 * Implements hook_install().
 */
function file_attributes_install() {
  // Get services.
  $entity_field_manager = \Drupal::service('entity_field.manager');
  $schema = \Drupal::database()->schema();
  $entity_type_manager = \Drupal::entityTypeManager();
  // Field config.
  $field = [
    'description' => 'Field options for files',
    'type' => 'blob',
    'size' => 'big',
    'not null' => FALSE,
  ];
  // Fieldmap by file field type.
  foreach ($entity_field_manager->getFieldMapByFieldType('file') as $entity_type_id => $map) {
    $entity_storage = $entity_type_manager->getStorage($entity_type_id);
    $field_storage_definitions = $entity_field_manager->getFieldStorageDefinitions($entity_type_id);
    $table_mapping = $entity_storage->getTableMapping($field_storage_definitions);
    foreach (array_intersect_key($field_storage_definitions, $map) as $field_storage_definition) {
      $field_name = $field_storage_definition->getName();
      // Column name.
      $column_name = $field_name . '_options';
      // Get data table and revision table.
      $tables = [
        $table_mapping->getDedicatedDataTableName($field_storage_definition),
        $table_mapping->getDedicatedRevisionTableName($field_storage_definition),
      ];
      // Add field if it does not exist.
      foreach ($tables as $table_name) {
        if ($schema->tableExists($table_name) && !$schema->fieldExists($table_name, $column_name)) {
          $schema->addField($table_name, $column_name, $field);
        }
      }
    }
  }
}
